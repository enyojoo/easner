"use strict";(()=>{var e={};e.id=436,e.ids=[436],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},68621:e=>{e.exports=require("punycode")},76162:e=>{e.exports=require("stream")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},77102:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>E,patchFetch:()=>v,requestAsyncStorage:()=>h,routeModule:()=>c,serverHooks:()=>x,staticGenerationAsyncStorage:()=>f});var t={};s.r(t),s.d(t,{POST:()=>l});var o=s(49303),n=s(88716),a=s(60670),u=s(87070),i=s(85662),p=s(41482),d=s.n(p);async function l(e){try{let r;let{token:s,email:t,newPassword:o}=await e.json(),n=(0,i.lx)();if(console.log("Reset password request:",{token:!!s,email:t,newPassword:!!o}),!s||!t||!o)return u.NextResponse.json({error:"Missing required fields"},{status:400});try{r=d().verify(s,process.env.JWT_SECRET),console.log("Decoded token:",r)}catch(e){return console.error("JWT verification error:",e),u.NextResponse.json({error:"Invalid or expired reset token"},{status:400})}if("password_reset"!==r.purpose||r.email!==t)return console.error("Token validation failed:",{purpose:r.purpose,tokenEmail:r.email,requestEmail:t}),u.NextResponse.json({error:"Invalid reset token"},{status:400});let{data:a,error:p}=await n.auth.admin.listUsers();if(p)return console.error("Error getting users:",p),u.NextResponse.json({error:"Failed to find user"},{status:500});let l=a.users.find(e=>e.email===t);if(!l)return console.error("User not found in auth.users:",t),u.NextResponse.json({error:"User not found"},{status:404});console.log("Found user:",l.id,l.email);let{error:c}=await n.auth.admin.updateUserById(l.id,{password:o});if(c)return console.error("Error updating password in Supabase Auth:",c),u.NextResponse.json({error:"Failed to update password"},{status:500});return console.log("Password updated successfully for user:",l.id),u.NextResponse.json({message:"Password reset successfully"})}catch(e){return console.error("Reset password error:",e),u.NextResponse.json({error:"Internal server error"},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/auth/reset-password/route",pathname:"/api/auth/reset-password",filename:"route",bundlePath:"app/api/auth/reset-password/route"},resolvedPagePath:"D:\\Users\\enyoc\\Documents\\Dev\\easner\\app\\api\\auth\\reset-password\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:h,staticGenerationAsyncStorage:f,serverHooks:x}=c,E="/api/auth/reset-password/route";function v(){return(0,a.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:f})}},85662:(e,r,s)=>{s.d(r,{OQ:()=>a,lx:()=>u});var t=s(69498);let o=process.env.NEXT_PUBLIC_SUPABASE_URL||"https://placeholder.supabase.co",n=process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY||"placeholder-key",a=(0,t.eI)(o,n,{auth:{persistSession:!0,autoRefreshToken:!0,detectSessionInUrl:!0,flowType:"pkce"}}),u=()=>{let e=process.env.SUPABASE_SERVICE_ROLE_KEY;if(!e){if(!process.env.VERCEL)throw Error("Missing SUPABASE_SERVICE_ROLE_KEY environment variable");return(0,t.eI)(o,n,{auth:{persistSession:!1,autoRefreshToken:!1}})}return(0,t.eI)(o,e,{auth:{persistSession:!1,autoRefreshToken:!1}})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[948,338,482],()=>s(77102));module.exports=t})();